variables:
  MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
               -Dorg.slf4j.simpleLogger.showDateTime=true
               -Djava.awt.headless=true
               -Dmaven.repo.local=.m2/repository"
  APT_DEV_BUSTER: https://nexus.ikus-soft.com/repository/minarca-apt-dev-buster/
  APT_DEV_STRETCH: https://nexus.ikus-soft.com/repository/minarca-apt-dev-stretch/
  APT_RELEASE_BUSTER: https://nexus.ikus-soft.com/repository/minarca-apt-release-buster/
  APT_RELEASE_STRETCH: https://nexus.ikus-soft.com/repository/minarca-apt-release-stretch/

services:
- docker:dind

stages:
- test
- bdist
- test-bdist
- upload
- deploy
- test-integration

# TODO Split this by python version and OS.
.make: &make
  image: docker
  before_script:
  - apk add make curl git bash
  script:
  - make $TARGET

test_stretch:
  <<: *make
  stage: test
  variables:
    TARGET: test
    DIST: stretch

test_buster:
  <<: *make
  stage: test
  variables:
    TARGET: test
    DIST: buster

bdist_stretch:
  <<: *make
  stage: bdist
  variables:
    TARGET: bdist
    DIST: stretch
  artifacts:
    paths:
    - minarca-server_*+stretch_amd64.deb

bdist_buster:
  <<: *make
  stage: bdist
  variables:
    TARGET: bdist
    DIST: buster
  artifacts:
    paths:
    - minarca-client*.exe
    - minarca-client*.deb
    - minarca-server_*+buster_amd64.deb

test-bdist_stretch:
  <<: *make
  stage: test-bdist
  variables:
    TARGET: test-bdist
    DIST: stretch

test-bdist_buster:
  <<: *make
  stage: test-bdist
  variables:
    TARGET: test-bdist
    DIST: buster

upload-www-dev:
  stage: upload
  except:
  - tags
  script:
  # Publish to kalo
  - eval $(ssh-agent -s)
  - echo "$KALO_WWWDATA_PRIVATEKEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  # publish server
  - export MINARCA_DEB_FILE=$(ls -1 ./minarca-server_*+stretch_amd64.deb)
  - scp -o StrictHostKeyChecking=no $MINARCA_DEB_FILE www-data@kalo.ikus-soft.com:/var/www/patrikdufresne/archive/minarca/nightly/
  - export MINARCA_DEB_FILE=$(ls -1 ./minarca-server_*+buster_amd64.deb)
  - scp -o StrictHostKeyChecking=no $MINARCA_DEB_FILE www-data@kalo.ikus-soft.com:/var/www/patrikdufresne/archive/minarca/nightly/
  # publish client
  - export MINARCA_DEB_FILE=$(ls -1 ./minarca-client*.deb)
  - export MINARCA_EXE_FILE=$(ls -1 ./minarca-client*.exe)
  - scp -o StrictHostKeyChecking=no $MINARCA_DEB_FILE www-data@kalo.ikus-soft.com:/var/www/patrikdufresne/archive/minarca/nightly/
  - scp -o StrictHostKeyChecking=no $MINARCA_EXE_FILE www-data@kalo.ikus-soft.com:/var/www/patrikdufresne/archive/minarca/nightly/
  # Publish get-minarca.sh script
  - scp -o StrictHostKeyChecking=no ./get-minarca.sh www-data@kalo.ikus-soft.com:/var/www/patrikdufresne/archive/minarca/nightly/

upload-apt-dev:
  stage: upload
  script: |
    set -e
    # Minarca Server Stretch
    export MINARCA_DEB_FILE=$(ls -1 ./minarca-server_*+stretch_amd64.deb)
    curl -u "$NEXUS_USR:$NEXUS_PWD" -H "Content-Type: multipart/form-data" --data-binary "@$MINARCA_DEB_FILE" "$APT_DEV_STRETCH"
    # Minarca Server Buster
    export MINARCA_DEB_FILE=$(ls -1 ./minarca-server_*+buster_amd64.deb)
    curl -u "$NEXUS_USR:$NEXUS_PWD" -H "Content-Type: multipart/form-data" --data-binary "@$MINARCA_DEB_FILE" "$APT_DEV_BUSTER"
    # Minarca Client
    export MINARCA_DEB_FILE=$(ls -1 ./minarca-client*.deb)
    curl -u "$NEXUS_USR:$NEXUS_PWD" -H "Content-Type: multipart/form-data" --data-binary "@$MINARCA_DEB_FILE" "$APT_DEV_STRETCH"
    curl -u "$NEXUS_USR:$NEXUS_PWD" -H "Content-Type: multipart/form-data" --data-binary "@$MINARCA_DEB_FILE" "$APT_DEV_BUSTER"

upload-www-release:
  stage: upload
  only:
  - /^[0-9]+\.[0-9]+\.[0-9]+$/
  script:
  # Setup authentication
  - eval $(ssh-agent -s)
  - echo "$KALO_WWWDATA_PRIVATEKEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  # Publish stretch package to kalo
  - export MINARCA_DEB_FILE=$(ls -1 ./minarca-server_*+stretch_amd64.deb)
  - scp -o StrictHostKeyChecking=no $MINARCA_DEB_FILE www-data@kalo.ikus-soft.com:/var/www/patrikdufresne/archive/minarca/
  - ssh -o StrictHostKeyChecking=no www-data@kalo.ikus-soft.com ln -fs /var/www/patrikdufresne/archive/minarca/$MINARCA_DEB_FILE /var/www/patrikdufresne/archive/minarca/minarca-server_latest+stretch_amd64.deb
  # Publish buster package to kalo
  - export MINARCA_DEB_FILE=$(ls -1 ./minarca-server_*+buster_amd64.deb)
  - scp -o StrictHostKeyChecking=no $MINARCA_DEB_FILE www-data@kalo.ikus-soft.com:/var/www/patrikdufresne/archive/minarca/
  - ssh -o StrictHostKeyChecking=no www-data@kalo.ikus-soft.com ln -fs /var/www/patrikdufresne/archive/minarca/$MINARCA_DEB_FILE /var/www/patrikdufresne/archive/minarca/minarca-server_latest+buster_amd64.deb
  # Publish client to kalo
  - export MINARCA_DEB_FILE=$(ls -1 ./minarca-client*.deb)
  - export MINARCA_EXE_FILE=$(ls -1 ./minarca-client*.exe)
  - scp -o StrictHostKeyChecking=no $MINARCA_EXE_FILE www-data@kalo.ikus-soft.com:/var/www/patrikdufresne/archive/minarca/
  - scp -o StrictHostKeyChecking=no $MINARCA_DEB_FILE www-data@kalo.ikus-soft.com:/var/www/patrikdufresne/archive/minarca/
  - ssh -o StrictHostKeyChecking=no www-data@kalo.ikus-soft.com ln -fs $(basename $MINARCA_EXE_FILE) /var/www/patrikdufresne/archive/minarca/minarca-latest-install.exe
  - ssh -o StrictHostKeyChecking=no www-data@kalo.ikus-soft.com ln -fs $(basename $MINARCA_DEB_FILE) /var/www/patrikdufresne/archive/minarca/minarca-client_latest_all.deb
  # Publish get-minarca.sh script
  - scp -o StrictHostKeyChecking=no ./get-minarca.sh www-data@kalo.ikus-soft.com:/var/www/patrikdufresne/archive/minarca/

upload-apt-release:
  stage: upload
  only:
  - /^[0-9]+\.[0-9]+\.[0-9]+$/
  script: |
    # Minarca Server Stretch
    export MINARCA_DEB_FILE=$(ls -1 ./minarca-server_*+stretch_amd64.deb)
    curl -u "$NEXUS_USR:$NEXUS_PWD" -H "Content-Type: multipart/form-data" --data-binary "@$MINARCA_DEB_FILE" "$APT_RELEASE_STRETCH" 
    # Minarca Server Buster
    export MINARCA_DEB_FILE=$(ls -1 ./minarca-server_*+buster_amd64.deb)
    curl -u "$NEXUS_USR:$NEXUS_PWD" -H "Content-Type: multipart/form-data" --data-binary "@$MINARCA_DEB_FILE" "$APT_RELEASE_BUSTER"
    # Minarca Client
    export MINARCA_DEB_FILE=$(ls -1 ./minarca-client*.deb)
    curl -u "$NEXUS_USR:$NEXUS_PWD" -H "Content-Type: multipart/form-data" --data-binary "@$MINARCA_DEB_FILE" "$APT_RELEASE_STRETCH"
    curl -u "$NEXUS_USR:$NEXUS_PWD" -H "Content-Type: multipart/form-data" --data-binary "@$MINARCA_DEB_FILE" "$APT_RELEASE_BUSTER"

deploy_docker_debian_stretch:
  stage: deploy
  image: buildpack-deps:stretch
  script:
  - export MINARCA_VERSION=$(cd minarca-server; make version)
  - echo MINARCA_VERSION=$MINARCA_VERSION
  - ./get-minarca.sh --dev --version $MINARCA_VERSION

deploy_docker_debian_buster:
  stage: deploy
  image: buildpack-deps:buster
  script:
  - export MINARCA_VERSION=$(cd minarca-server; make version)
  - echo MINARCA_VERSION=$MINARCA_VERSION
  - ./get-minarca.sh --dev --version $MINARCA_VERSION

deploy_staging_sestican:
  stage: deploy
  image: buildpack-deps:buster
  environment:
    name: staging
    url: https://test.minarca.net
  script:
  - export MINARCA_VERSION=$(make version)
  - echo MINARCA_VERSION=$MINARCA_VERSION
  - curl -X POST -F token=36bae86778d901fc6b2d6453a41844 -F "ref=master" -F "variables[MINARCA_VERSION]=$MINARCA_VERSION" https://gitlab.com/api/v4/projects/18716492/trigger/pipeline
  
#test_link_debian_stretch:
#  image: debian:stretch
#  stage: test-integration
#  variables:
#    MINARCA_REPOSITORYNAME: test-${CI_JOB_ID}
#  script: 
#  - export MINARCA_DEB_FILE=$(ls -1 ./minarca-client*.deb)
#  - bash ./tests/install-client-deb.sh
#  - bash ./tests/link-link-deb-linux.sh
  
#test_link_debian_buster:
#  image: debian:buster
#  stage: test-integration
#  variables:
#    MINARCA_REPOSITORYNAME: test-${CI_JOB_ID}
#  script: 
#  - export MINARCA_DEB_FILE=$(ls -1 ./minarca-client*.deb)
#  - bash ./tests/install-client-deb.sh
#  - bash ./tests/link-link-deb-linux.sh

# This test is not working and fail because of issue with wine.
#test_link_win:
#  image: debian:buster
#  stage: test-integration
#  variables:
#    MINARCA_REPOSITORYNAME: test-${CI_JOB_ID}
#  allow_failure: true
#  script: 
#  - export MINARCA_EXE_FILE=$(ls -1 ./minarca-client*.exe)
#  - bash ./tests/install-client-win.sh
#  - bash ./tests/link-link-win.sh
  