#!/bin/bash
# Copyright (C) 2020 IKUS Software inc. All rights reserved.
# IKUS Software inc. PROPRIETARY/CONFIDENTIAL.
# Use is subject to license terms.
#
# minarca shell, invoked from ~/.ssh/authorized_keys
# ----------------------------------------------------------------------
set -e
#set -x

if [ -e /etc/minarca/minarca-shell.conf ]; then
    . /etc/minarca/minarca-shell.conf
fi

USERNAME=$1
USERHOME=$2

# TODO Evaluate execution in a sandbox/docker/lxc to provide better security then --restrict

# Validate user home directory
if [ ! -d "$USERHOME" ]; then
    logger "$0: user [$USERNAME] in [$USERHOME] invalid user home: $USERHOME"
    printf "ERROR user home directory is miss configured.\n"
    exit 1
fi

# Quit if command line is not provided.
if [ -z "$SSH_ORIGINAL_COMMAND" ]; then
    printf "ERROR no command provided.\n"
    exit 1
fi

# For quota management, we need to sudo as the user to sets the file permissions properly.
# Check if the user really exists. If it does exists, let sudo as this user.
SUDO=""
if id -u $USERNAME &>/dev/null ; then
case "$SUDO_OWNERSHIP" in
  true|1)
    SUDO="sudo --non-interactive -u $USERNAME -g minarca";;
esac
fi

# Either we get called by rdiff-backup directly
# or we get called by minarca client which replace the command by the name of the repository.
cd "$USERHOME"
if [ ${RDIFFBACKUP_COMPATIBILITY:-0} ]; then
    case "$SSH_ORIGINAL_COMMAND" in
    "rdiff-backup --server")
        # When called by rdiff-backup, restrict path to user's home.
        # But this will force rdiff-backup client to provide the full path.
        logger "$0: user [$USERNAME] in [$USERHOME] obsolete command: $SSH_ORIGINAL_COMMAND"
        $SUDO  rdiff-backup --server $RDIFFBACKUP_ARGS
        $SUDO chmod 770 "$REPO"
        exit;;
    "echo -n 1"|"echo -n host is alive"|"/usr/bin/rdiff-backup -V")
        # Used by backup-ninja to verify connectivity
        $SSH_ORIGINAL_COMMAND
        exit;;
    esac
fi

# When called by minarca client, the command should be the name of the repository.
# Let make sure it's not trying to evade our user's home.
REPO="$SSH_ORIGINAL_COMMAND"
case "$REPO" in
/*|*/..|../*|*/../*)
    logger "$0: user [$USERNAME] in [$USERHOME] invalid repo: $REPO"
    printf "ERROR repository name $REPO is not valid\n."
    exit 1
esac

logger "$0: user [$USERNAME] in [$USERHOME] repo: $REPO"
cd "$USERHOME"
$SUDO rdiff-backup --server --restrict="$REPO" $RDIFFBACKUP_ARGS
if [ -e "$REPO" ]; then
    $SUDO chmod 770 "$REPO"
fi
