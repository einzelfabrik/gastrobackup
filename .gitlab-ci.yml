variables:
  MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
               -Dorg.slf4j.simpleLogger.showDateTime=true
               -Djava.awt.headless=true
               -Dmaven.repo.local=.m2/repository"
  APT_DEV_BUSTER: https://nexus.ikus-soft.com/repository/apt-dev-buster/
  APT_RELEASE_BUSTER: https://nexus.ikus-soft.com/repository/apt-release-buster/
  APT_DEV_BULLSEYE: https://nexus.ikus-soft.com/repository/apt-dev-bullseye/
  APT_RELEASE_BULLSEYE: https://nexus.ikus-soft.com/repository/apt-release-bullseye/

stages:
- test-and-bdist
- upload
- integration-tests
- deploy

# TODO Split this by python version and OS.
.make: &make
  image: docker
  services:
  - docker:dind
  before_script:
  - apk add make curl git bash
  script:
  - make $TARGET

test:buster:
  <<: *make
  stage: test-and-bdist
  variables:
    TARGET: test
    DIST: buster
    
test:bullseye:
  <<: *make
  stage: test-and-bdist
  variables:
    TARGET: test
    DIST: bullseye

bdist:buster:
  <<: *make
  stage: test-and-bdist
  variables:
    TARGET: bdist
    DIST: buster
  artifacts:
    paths:
    - minarca-client*.exe
    - minarca-client*.deb
    - minarca-server_*_amd64.deb
    - minarca-quota-api_*_amd64.deb

bdist:bullseye:
  <<: *make
  stage: test-and-bdist
  variables:
    TARGET: bdist
    DIST: bullseye
  artifacts:
    paths:
    - minarca-client*.deb
    - minarca-server_*_amd64.deb
    - minarca-quota-api_*_amd64.deb

.upload: &upload
  stage: upload
  script: |
    set -e
    if [ -z "$CI_COMMIT_TAG" ]; then
      APT_URL=APT_DEV_${DIST^^}
    else
      APT_URL=APT_RELEASE_${DIST^^}
    fi
    APT_URL=${!APT_URL}
    # Minarca Server
    export MINARCA_DEB_FILE=$(ls -1 ./minarca-server_*_amd64.deb)
    curl --fail -u "$NEXUS_USR:$NEXUS_PWD" -H "Content-Type: multipart/form-data" --data-binary "@$MINARCA_DEB_FILE" "$APT_URL"
    # Minarca Quota API
    export MINARCA_QUOTA_DEB_FILE=$(ls -1 ./minarca-quota-api_*_amd64.deb)
    curl --fail -u "$NEXUS_USR:$NEXUS_PWD" -H "Content-Type: multipart/form-data" --data-binary "@$MINARCA_QUOTA_DEB_FILE" "$APT_URL"
    # Minarca Client
    export MINARCA_DEB_FILE=$(ls -1 ./minarca-client*.deb)
    curl --fail -u "$NEXUS_USR:$NEXUS_PWD" -H "Content-Type: multipart/form-data" --data-binary "@$MINARCA_DEB_FILE" "$APT_URL"

upload:buster:apt:
  <<: *upload
  variables:
    DIST: buster
  dependencies:
  - bdist:buster
  
upload:bullseye:apt:
  <<: *upload
  variables:
    DIST: bullseye
  dependencies:
  - bdist:bullseye
  
upload:client:www:
  stage: upload
  dependencies:
  - bdist:buster
  script: |
    # Publish to kalo
    eval $(ssh-agent -s)
    echo "$KALO_WWWDATA_PRIVATEKEY" | tr -d '\r' | ssh-add - > /dev/null
    mkdir -p ~/.ssh
    chmod 700 ~/.ssh
    # publish client
    export MINARCA_EXE_FILE=$(ls -1 ./minarca-client*.exe)
    scp -o StrictHostKeyChecking=no $MINARCA_EXE_FILE www-data@kalo.ikus-soft.com:/var/www/patrikdufresne/archive/minarca/
    # Publish get-minarca.sh script
    scp -o StrictHostKeyChecking=no ./get-minarca.sh www-data@kalo.ikus-soft.com:/var/www/patrikdufresne/archive/minarca/
    if [ ! -z "$CI_COMMIT_TAG" ]; then
      ssh -o StrictHostKeyChecking=no www-data@kalo.ikus-soft.com ln -fs $(basename $MINARCA_EXE_FILE) /var/www/patrikdufresne/archive/minarca/minarca-client_latest.exe
    fi

integration-tests:
  <<: *make
  stage: integration-tests
  allow_failure: True
  dependencies: []
  script:
  - export MINARCA_VERSION=$(cd minarca-server; make version)
  - echo MINARCA_VERSION=$MINARCA_VERSION
  - cd integration-tests
  - apk add docker-compose
  # Test latest version of client & server
  - MINARCA_SERVER_VERSION=$MINARCA_VERSION MINARCA_CLIENT_VERSION=$MINARCA_VERSION MINARCA_CLIENT_DIST=debian:bullseye ./run.sh
  - MINARCA_SERVER_VERSION=$MINARCA_VERSION MINARCA_CLIENT_VERSION=$MINARCA_VERSION MINARCA_CLIENT_DIST=debian:buster   ./run.sh
  - MINARCA_SERVER_VERSION=$MINARCA_VERSION MINARCA_CLIENT_VERSION=$MINARCA_VERSION MINARCA_CLIENT_DIST=win32           ./run.sh
  # Test backward compatibility with 3.8.0 (rdiff-backup-1.2.8)
  - MINARCA_SERVER_VERSION=$MINARCA_VERSION MINARCA_CLIENT_VERSION=3.8.0            MINARCA_CLIENT_DIST=debian:buster   ./run.sh
  - MINARCA_SERVER_VERSION=$MINARCA_VERSION MINARCA_CLIENT_VERSION=3.8.0            MINARCA_CLIENT_DIST=win32           ./run.sh

deploy_staging_sestican:
  stage: deploy
  image: buildpack-deps:buster
  dependencies: []
  environment:
    name: staging
    url: https://test.minarca.net
  script:
  - export MINARCA_VERSION=$(cd minarca-server; make version)
  - echo MINARCA_VERSION=$MINARCA_VERSION
  - curl -X POST -F token=36bae86778d901fc6b2d6453a41844 -F "ref=master" -F "variables[MINARCA_VERSION]=$MINARCA_VERSION" https://gitlab.com/api/v4/projects/18716492/trigger/pipeline
